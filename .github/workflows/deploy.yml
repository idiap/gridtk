# SPDX-FileCopyrightText: 2024 Idiap Research Institute <contact@idiap.ch>
# SPDX-FileContributor: Amir Mohammadi  <amir.mohammadi@idiap.ch>
#
# SPDX-License-Identifier: GPL-3.0-or-later

# From https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-pypi

name: Upload Python Package

on:
  release:
    types: [published]

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - name: Build release distributions
        run: |
          python -m pip install build
          python -m build

      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/
          if-no-files-found: error

  pypi-publish:
    runs-on: ubuntu-22.04

    needs:
      - release-build

    permissions:
      # IMPORTANT: this permission is mandatory for trusted publishing
      id-token: write

    # Dedicated environments with protections for publishing are strongly recommended.
    environment:
      name: pypi
      # include the PyPI project URL in the deployment status:
      url: https://pypi.org/p/gridtk

    steps:
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

  github-publish:
    name: Upload the release package to GitHub Release
    needs:
      - release-build
    runs-on: ubuntu-22.04
    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
    steps:
      - name: Retrieve the package from GitHub actions artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-dist
          path: dist/
      - name: Upload the release package to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        run: gh release upload '${{ github.ref_name }}' dist/** --repo '${{ github.repository }}'
