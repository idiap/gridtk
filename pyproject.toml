# SPDX-FileCopyrightText: Copyright Â© 2022 Idiap Research Institute <contact@idiap.ch>
#
# SPDX-License-Identifier: GPL-3.0-or-later

[build-system]
requires = ["hatchling", "versioningit"]
build-backend = "hatchling.build"

[project]
name = "gridtk"
dynamic = ["version"]
requires-python = ">=3.12"
description = "GridTK: SLURM Job Managetment for Humans"
readme = "README.md"
license = "GPL-3.0-or-later"
authors = [
  { name = "Amir Mohamamdi", email = "amir.mohammadi@idiap.ch" },
  { name = "Andre Anjos", email = "andre.anjos@idiap.ch" },
  { name = "Manuel Guenther", email = "manuel.guenther@idiap.ch" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU General Public License v3 (GPLv3)",
  "Natural Language :: English",
  "Programming Language :: Python :: 3",
  "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = ["clapper", "sqlalchemy>=2", "tabulate", "click"]

[project.urls]
documentation = "https://gridtk.readthedocs.io/en/latest/"
homepage = "https://pypi.org/project/gridtk"
repository = "https://gitlab.idiap.ch/software/gridtk"
changelog = "https://gitlab.idiap.ch/software/gridtk/-/releases"

[project.optional-dependencies]
qa = ["pre-commit", "ruff", "reuse"]
doc = [
  "sphinx",
  "furo",
  "sphinx-autodoc-typehints",
  "sphinx-copybutton",
  "sphinx-inline-tabs",
  "myst-parser",
]
test = ["pytest", "pytest-cov", "coverage"]

[project.scripts]
gridtk = "gridtk.cli:cli"

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.system-requirements]
linux = "4.19.0"

[tool.pixi.dependencies]
clapper = "*"
sqlalchemy = ">=2.0.30,<2.1"
tabulate = ">=0.9.0,<0.10"
pytest = ">=8.2.0,<8.3"
pytest-mock = ">=3.14.0,<3.15"
click = ">=8.1.7,<8.2"

[tool.pixi.feature.self.pypi-dependencies]
gridtk = { path = ".", editable = true }

[tool.pixi.feature.py312.dependencies]
python = "~=3.12.0"

[tool.pixi.feature.qa.dependencies]
pre-commit = "*"
ruff = "*"
reuse = "*"

[tool.pixi.feature.qa.tasks]
qa-install = "pre-commit install"
qa = "pre-commit run --all-files"
qa-ci = "pre-commit run --all-files --show-diff-on-failure --verbose"

[tool.pixi.feature.doc.dependencies]
sphinx = "*"
furo = "*"
sphinx-autodoc-typehints = "*"
sphinx-copybutton = "*"
sphinx-inline-tabs = "*"
myst-parser = "*"

[tool.pixi.feature.doc.tasks]
doc-clean = "rm -rf doc/api && rm -rf html"
doc = "sphinx-build -aEW doc html"
doctest = "sphinx-build -aEb doctest doc html/doctest"

[tool.pixi.feature.test.dependencies]
pytest = "*"
pytest-cov = "*"

[tool.pixi.feature.test.tasks]
test = "pytest -sv tests/"
test-ci = "pytest -sv --cov-report 'html:html/coverage' --cov-report 'xml:coverage.xml' --junitxml 'junit-coverage.xml' --ignore '.profile' tests/"

[tool.pixi.feature.build.dependencies]
hatch = "*"
versioningit = "*"
twine = "*"

[tool.pixi.feature.build.tasks]
build = "hatch build"
check = "twine check dist/*"
upload = "twine upload dist/*"

[tool.pixi.feature.dev.dependencies]
pdbpp = "*"
uv = "*"

[tool.pixi.environments]
default = { features = ["qa", "build", "doc", "test", "dev", "py312", "self"] }
qa-ci = { features = ["qa", "py312"] }
build-ci = { features = ["build", "py312"] }

[tool.hatch.version]
source = "versioningit"

[tool.versioningit.next-version]
method = "smallest"

[tool.versioningit.format]
# Example formatted version: 1.2.4.dev42+ge174a1f
distance = "{next_version}.dev{distance}+{vcs}{rev}"
# Example formatted version: 1.2.4.dev42+ge174a1f.d20230922
distance-dirty = "{next_version}.dev{distance}+{vcs}{rev}.d{build_date:%Y%m%d}"

[tool.hatch.build.targets.sdist]
include = [
  "src/**/*.py",
  "tests/**/*.py",
  "doc/**/*.rst",
  "doc/**/*.py",
  "LICENSES/*.txt",
  "LICENSE",
  "READNE.md",
]

[tool.hatch.build.targets.wheel]
packages = ["src/gridtk"]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
  "A",   # https://docs.astral.sh/ruff/rules/#flake8-builtins-a
  "COM", # https://docs.astral.sh/ruff/rules/#flake8-commas-com
  "D",   # https://docs.astral.sh/ruff/rules/#pydocstyle-d
  "E",   # https://docs.astral.sh/ruff/rules/#error-e
  "F",   # https://docs.astral.sh/ruff/rules/#pyflakes-f
  "I",   # https://docs.astral.sh/ruff/rules/#isort-i
  "ISC", # https://docs.astral.sh/ruff/rules/#flake8-implicit-str-concat-isc
  "LOG", # https://docs.astral.sh/ruff/rules/#flake8-logging-log
  "N",   # https://docs.astral.sh/ruff/rules/#pep8-naming-n
  "PTH", # https://docs.astral.sh/ruff/rules/#flake8-use-pathlib-pth
  "Q",   # https://docs.astral.sh/ruff/rules/#flake8-quotes-q
  "RET", # https://docs.astral.sh/ruff/rules/#flake8-return-ret
  "SLF", # https://docs.astral.sh/ruff/rules/#flake8-self-slf
  "T10", # https://docs.astral.sh/ruff/rules/#flake8-debugger-t10
  "T20", # https://docs.astral.sh/ruff/rules/#flake8-print-t20
  "UP",  # https://docs.astral.sh/ruff/rules/#pyupgrade-up
  "W",   # https://docs.astral.sh/ruff/rules/#warning-w
  #"G",   # https://docs.astral.sh/ruff/rules/#flake8-logging-format-g
  #"ICN", # https://docs.astral.sh/ruff/rules/#flake8-import-conventions-icn
]
ignore = [
  "COM812", # https://docs.astral.sh/ruff/rules/missing-trailing-comma/
  "D100",   # https://docs.astral.sh/ruff/rules/undocumented-public-module/
  "D102",   # https://docs.astral.sh/ruff/rules/undocumented-public-method/
  "D104",   # https://docs.astral.sh/ruff/rules/undocumented-public-package/
  "D105",   # https://docs.astral.sh/ruff/rules/undocumented-magic-method/
  "D107",   # https://docs.astral.sh/ruff/rules/undocumented-public-init/
  "D203",   # https://docs.astral.sh/ruff/rules/one-blank-line-before-class/
  "D202",   # https://docs.astral.sh/ruff/rules/no-blank-line-after-function/
  "D205",   # https://docs.astral.sh/ruff/rules/blank-line-after-summary/
  "D212",   # https://docs.astral.sh/ruff/rules/multi-line-summary-first-line/
  "D213",   # https://docs.astral.sh/ruff/rules/multi-line-summary-second-line/
  "E302",   # https://docs.astral.sh/ruff/rules/blank-lines-top-level/
  "E402",   # https://docs.astral.sh/ruff/rules/module-import-not-at-top-of-file/
  "E501",   # https://docs.astral.sh/ruff/rules/line-too-long/
  "ISC001", # https://docs.astral.sh/ruff/rules/single-line-implicit-string-concatenation/
]

[tool.ruff.lint.isort]
# Use a single line between direct and from import.
lines-between-types = 1

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.per-file-ignores]
"tests/*.py" = ["D", "E501"]
"doc/conf.py" = ["D"]


[tool.pytest.ini_options]
addopts = ["--cov=gridtk", "--cov-report=term-missing", "--import-mode=append"]
junit_logging = "all"
junit_log_passing_tests = false
